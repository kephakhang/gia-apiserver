

buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springboot_version"
        classpath "io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:$spring_management_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }

}

apply plugin: "kotlin"
//apply plugin: "java"
apply plugin: "org.jetbrains.kotlin.plugin.spring"
apply plugin: "org.jetbrains.kotlin.plugin.jpa"
apply plugin: "kotlin-jpa"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "org.jetbrains.kotlin.plugin.allopen"

group "kr.co.korbit.gia"
version "0.0.1"
mainClassName = "kr.co.korbit.gia.Application"


sourceSets {
    main.kotlin.srcDirs = ["src/kotlin"]
    //main.kotlin.srcDirs = main.java.srcDirs = ["src/kotlin"]
    main.resources.srcDirs = ["src/resources", "src/resources-static", "src/resources-$profile"]
    test.kotlin.srcDirs = ["test/kotlin"]
    //test.kotlin.srcDirs = test.java.srcDirs = ["test/kotlin"]
    test.resources.srcDirs = ["test/resources"]
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "https://kotlin.bintray.com/ktor" }
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {

//    implementation(project(":common"))
//    implementation(project(":internal"))
    subprojects.forEach {
        implementation(project(it.path))
    }

//    implementation("org.springframework.boot:spring-boot-starter-cache:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-data-jpa:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-data-rest:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-hateoas:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-integration:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-mail:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-oauth2-client:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-quartz:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-security:$springboot_version")
//    implementation("org.springframework.boot:spring-boot-starter-validation:$springboot_version")
    implementation("org.springframework.boot:spring-boot-starter-web:$springboot_version")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
//    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$ktor_version"
    implementation "com.sksamuel.hoplite:hoplite-core:$hoplite_version"
    implementation "com.sksamuel.hoplite:hoplite-yaml:$hoplite_version"
//    implementation "io.ktor:ktor-jackson:$ktor_version"
//    implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
//    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$fasterxml_version"
//    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$fasterxml_version"
//    implementation "com.github.oshi:oshi-core:$oshi_version"
//    implementation "com.zaxxer:HikariCP:$hikaricp_version"
//    implementation "mysql:mysql-connector-java:$mysql_driver_version"
//    implementation "org.hibernate:hibernate-core:$hibernate_version"
//    implementation "org.hibernate:hibernate-entitymanager:$hibernate_version"
//    implementation "org.hibernate.validator:hibernate-validator:$hibernate_validator_version"
//    implementation "org.hibernate:hibernate-c3p0:$hibernate_version"
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinx_serialization_version"
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$kotlinx_serialization_version"
//    implementation "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$hibernate_java_version"

}


// default enable
//kotlin.experimental.coroutines = 'enable'

shadowJar {
    baseName = 'gia'
    classifier = null
    version = null
}

compileKotlin {
    kotlinOptions.freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

allOpen {
    annotation "javax.persistence.Entity"
    annotation "javax.persistence.MappedSuperclass"
    annotation "javax.persistence.Embeddable"
}

