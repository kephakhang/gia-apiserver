
buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springboot_version"
        classpath "io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:$spring_management_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
//        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }

}

apply plugin: "kotlin"
//apply plugin: "java"
apply plugin: "org.jetbrains.kotlin.plugin.spring"
apply plugin: "org.jetbrains.kotlin.plugin.jpa"
apply plugin: "kotlin-jpa"
apply plugin: "org.jetbrains.kotlin.plugin.allopen"
apply plugin: "org.jetbrains.kotlin.plugin.noarg"

group 'kr.co.korbit'
version '0.0.1'

sourceSets {
    main.kotlin.srcDirs = ["src/main/kotlin"]
    main.resources.srcDirs = ["src/main/resources"]
    test.kotlin.srcDirs = ["src/test/kotlin"]
    test.resources.srcDirs = ["src/test/resources"]
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("com.typesafe:config:$type_safe_version")
    implementation("org.modelmapper:modelmapper:$model_mapper_verison")
    implementation("com.zaxxer:HikariCP:$hikaricp_version")
    implementation("io.github.microutils:kotlin-logging:$kotlin_logging_version")
    runtimeOnly("mysql:mysql-connector-java:$mysql_driver_version")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:$springboot_version")
    implementation("org.springframework.boot:spring-boot-starter-data-jdbc:$springboot_version")
    implementation("org.springframework.boot:spring-boot-starter-web:$springboot_version")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:$springboot_version")
    implementation("io.springfox:springfox-swagger2:$swagger_version")
    implementation("io.springfox:springfox-swagger-ui:$swagger_version")
    testImplementation("junit:junit:4.12")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

allOpen {
    annotation "javax.persistence.Entity"
    annotation "javax.persistence.MappedSuperclass"
    annotation "javax.persistence.Embeddable"
}

noArg {
    annotation "javax.persistence.Entity"
    annotation "javax.persistence.MappedSuperclass"
    annotation "javax.persistence.Embeddable"
}

