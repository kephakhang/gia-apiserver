ktor {
    deployment {
        branch = "local"
        applicable = "false"
        port = 8080

;        shutdown.url = "/korbit/gia/shutdown"

    }

    kafka {
        producer {
            client.id = "kafka-producer"
            bootstrap.servers = ${KAFKA_BOOTSTRAP_SERVER}
            key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
            value.serializer = "kr.co.korbit.gia.kafka.JacksonSerializer"
;             ssl.truststore.location="jks/kafka.server.truststore.jks"
;             ssl.truststore.password="korbit"
;             ssl.keystore.location="jks/kafka.server.keystore.jks"
;             ssl.keystore.password="korbit"
;             ssl.key.password="korbit"
;             security.protocol="SSL"
;             ssl.endpoint.identification.algorithm=""
        }
        consumer {
            topic = "orderbook"
            client.id = "kafka-consumer"
            group.id = "korbit-orderbook-group"
            bootstrap.servers = ${KAFKA_BOOTSTRAP_SERVER}
            key.deserializer = "kr.co.korbit.gia.kafka.KeyDeserializer"
            value.deserializer = "kr.co.korbit.gia.kafka.JacksonDeserializer"
;             ssl.truststore.location="jks/kafka.server.truststore.jks"
;             ssl.truststore.password="korbit"
;             ssl.keystore.location="jks/kafka.server.keystore.jks"
;             ssl.keystore.password="korbit"
;             ssl.key.password="korbit"
;             security.protocol="SSL"
;             ssl.endpoint.identification.algorithm=""
              logging = "true"
        }
    }
}
